-- 계정 생성
CREATE USER KH_FINAL IDENTIFIED BY KH_FINAL;
GRANT RESOURCE, CONNECT, DBA TO KH_FINAL;

SELECT * FROM DBA_SYS_PRIVS
WHERE GRANTEE = 'KH_FINAL';

SELECT * FROM DBA_ROLE_PRIVS
WHERE GRANTEE = 'KH_FINAL2';

CREATE USER KH_FINAL2 IDENTIFIED BY KH_FINAL2;
DROP USER KH_FINAL2;
GRANT RESOURCE, CONNECT TO KH_FINAL2;

select * from role_sys_privs
where role='RESOURCE';

-- 이걸로 권한 주면 됨
alter user "KH_FINAL2" default tablespace users quota unlimited on users;

CREATE TABLE TEST (
    NO NUMBER
);

INSERT INTO TEST VALUES(1);

-----------------------------------------------------------------------------------------------------------------------------------------------------------
-- DDL ----------------------------------------------------------------------------------------------------------------------------------------------------
-- 일정 ---------------------------------------------------------------------------------------------------------------------------------------------------
DROP TABLE SCH_CATEGORY;
CREATE TABLE SCH_CATEGORY (
    CAT_NO NUMBER CONSTRAINT CAT_PK PRIMARY KEY,
    NAME VARCHAR(30) CONSTRAINT CAT_NAME_NN NOT NULL,
);

COMMENT ON COLUMN SCH_CATEGORY.CAT_NO IS '분류번호';
COMMENT ON COLUMN SCH_CATEGORY.NAME IS '분류명';

--------------------------------------------------------------------------------
DROP TABLE SCHEDULE;
CREATE TABLE SCHEDULE (
    SCH_NO NUMBER CONSTRAINT SCH_PK PRIMARY KEY,
    NAME VARCHAR(30) CONSTRAINT SCH_NAME_NN NOT NULL,
    START_DATE DATE CONSTRAINT SCH_START_DATE_NN NOT NULL,
    END_DATE DATE CONSTRAINT SCH_END_DATE_NN NOT NULL,
    LOCATION VARCHAR(50),
    CONTENT VARCHAR(200),
    CAT_NO NUMBER,
    CONSTRAINT SCH_CAT_FK FOREIGN KEY(SCH_CAT) REFERENCES SCH_CATEGORY(CAT_NO)
);

COMMENT ON COLUMN SCHEDULE.SCH_NO IS '일정번호';
COMMENT ON COLUMN SCHEDULE.NAME IS '일정명';
COMMENT ON COLUMN SCHEDULE.START_DATE IS '시작일';
COMMENT ON COLUMN SCHEDULE.END_DATE IS '종료일';
COMMENT ON COLUMN SCHEDULE.LOCATION IS '장소';
COMMENT ON COLUMN SCHEDULE.CONTENT IS '내용';

--------------------------------------------------------------------------------
DROP TABLE CALENDAR;
CREATE TABLE CALENDAR (
    CAL_NO NUMBER CONSTRAINT CAL_PK PRIMARY KEY,
    NAME VARCHAR(20) CONSTRAINT CAL_NAME_NN NOT NULL
);

COMMENT ON COLUMN CALENDAR.CAL_NO IS '캘린더번호';
COMMENT ON COLUMN CALENDAR.NAME IS '캘린더명';

--------------------------------------------------------------------------------
DROP TABLE SCH_CAL_REGISTRATION;
CREATE TABLE SCH_CAL_REGISTRATION (
    REG_NO NUMBER CONSTRAINT SCH_CAL_PK PRIMARY KEY,
    CAL_NO NUMBER,
    SCH_NO NUMBER,
    CONSTRAINT SCH_CAL_CAL_FK FOREIGN KEY(CAL_NO) REFERENCES CALENDAR(CAL_NO),
    CONSTRAINT SCH_CAL_SCH_FK FOREIGN KEY(SCH_NO) REFERENCES SCHEDULE(SCH_NO)
);

COMMENT ON COLUMN SCH_CAL_REGISTRATION.REG_NO IS '등록번호';
COMMENT ON COLUMN SCH_CAL_REGISTRATION.CAL_NO IS '캘린더번호';
COMMENT ON COLUMN SCH_CAL_REGISTRATION.SCH_NO IS '일정번호';

--------------------------------------------------------------------------------
DROP TABLE CAL_REGISTRATION;
CREATE TABLE CAL_REGISTRATION (
    REG_NO NUMBER CONSTRAINT CAL_REG_PK PRIMARY KEY,
    COLOR VARCHAR(10) DEFAULT 'GRAY' CONSTRAINT REG_COLOR_NN NOT NULL,
    CAL_NO NUMBER,
    EMP_NO NUMBER,
    CONSTRAINT CAL_REG_CAL_FK FOREIGN KEY(CAL_NO) REFERENCES CALENDAR(CAL_NO) ON DELETE CASCADE,
    CONSTRAINT CAL_REG_EMP_FK FOREIGN KEY(EMP_NO) REFERENCES EMPLOYEE(EMP_NO) ON DELETE CASCADE
);

COMMENT ON COLUMN CAL_REGISTRATION.REG_NO IS '등록번호';
COMMENT ON COLUMN CAL_REGISTRATION.COLOR IS '색깔';
COMMENT ON COLUMN CAL_REGISTRATION.CAL_NO IS '캘린더번호';
COMMENT ON COLUMN CAL_REGISTRATION.EMP_NO IS '사원번호';

--------------------------------------------------------------------------------
DROP TABLE LIKE_CAL_REGISTRATION;
CREATE TABLE LIKE_CAL_REGISTRATION (
    REG_NO NUMBER CONSTRAINT LIKE_CAL_REG_PK PRIMARY KEY,
    COLOR VARCHAR(10) DEFAULT 'GRAY' CONSTRAINT LIKE_REG_COLOR_NN NOT NULL,
    CAL_REG_NO NUMBER,
    EMP_NO NUMBER,
    CONSTRAINT LIKE_CAL_REG_CAL_FK FOREIGN KEY(CAL_REG_NO) REFERENCES CAL_REGISTRATION(REG_NO) ON DELETE CASCADE,
    CONSTRAINT LIKE_CAL_REG_EMP_FK FOREIGN KEY(EMP_NO) REFERENCES EMPLOYEE(EMP_NO) ON DELETE CASCADE   
);

COMMENT ON COLUMN LIKE_CAL_REGISTRATION.REG_NO IS '등록번호';
COMMENT ON COLUMN LIKE_CAL_REGISTRATION.COLOR IS '색깔';
COMMENT ON COLUMN LIKE_CAL_REGISTRATION.CAL_REG_NO IS '캘린더번호';
COMMENT ON COLUMN LIKE_CAL_REGISTRATION.EMP_NO IS '사원번호';

--------------------------------------------------------------------------------
DROP TABLE ATTENDANT;
CREATE TABLE ATTENDANT (
    ATT_NO NUMBER CONSTRAINT ATT_PK PRIMARY KEY,
    SCH_NO NUMBER,
    EMP_NO NUMBER,
    CONSTRAINT ATT_SCH_FK FOREIGN KEY(SCH_NO) REFERENCES SCHEDULE(SCH_NO) ON DELETE CASCADE,
    CONSTRAINT ATT_EMP_FK FOREIGN KEY(EMP_NO) REFERENCES EMPLOYEE(EMP_NO) ON DELETE CASCADE   
);

COMMENT ON COLUMN ATTENDANT.ATT_NO IS '참석자번호';
COMMENT ON COLUMN ATTENDANT.SCH_NO IS '일정번호';
COMMENT ON COLUMN ATTENDANT.EMP_NO IS '사원번호';

-----------------------------------------------------------------------------------------------------------------------------------------------------------
-- 예약 ----------------------------------------------------------------------------------------------------------------------------------------------------
DROP TABLE ASSET_LIST;
CREATE TABLE ASSET_LIST (
    AL_NO NUMBER CONSTRAINT AL_PK PRIMARY KEY,
    NAME VARCHAR(30) CONSTRAINT AL_NAME_NN NOT NULL,
    EMP_NO NUMBER,
    CONSTRAINT AL_EMP_FK FOREIGN KEY(EMP_NO) REFERENCES EMPLOYEE(EMP_NO) ON DELETE SET NULL
);

COMMENT ON COLUMN ASSET_LIST.AL_NO IS '목록번호';
COMMENT ON COLUMN ASSET_LIST.NAME IS '목록명';
COMMENT ON COLUMN ASSET_LIST.EMP_NO IS '담당자번호';

-------------------------------------------------------------------------------
DROP TABLE AL_USAGE_INFO;
CREATE TABLE AL_USAGE_INFO (
    INFO_NO NUMBER CONSTRAINT AL_USG_INFO_PK PRIMARY KEY,
    NAME VARCHAR(30) CONSTRAINT AL_USG_INFO_NAME_NN NOT NULL,
    AL_NO NUMBER,
    CONSTRAINT AL_USAGE_INFO_AL_FK FOREIGN KEY(AL_NO) REFERENCES ASSET_LIST(AL_NO)
);

COMMENT ON COLUMN AL_USAGE_INFO.INFO_NO IS '이용정보번호';
COMMENT ON COLUMN AL_USAGE_INFO.NAME IS '정보명';
COMMENT ON COLUMN AL_USAGE_INFO.AL_NO IS '목록번호';

-------------------------------------------------------------------------------
DROP TABLE INFO_ATTACHMENT;
CREATE TABLE INFO_ATTACHMENT (
    ATT_NO NUMBER CONSTRAINT INFO_ATT_PK PRIMARY KEY,
    ORIGIN_NAME VARCHAR(100) CONSTRAINT INFO_ATT_ORIGIN_NAME_NN NOT NULL,
    CHANGE_NAME VARCHAR(100),
    UPLOAD_DATE DATE DEFAULT SYSDATE CONSTRAINT INFO_ATT_UPLOAD_DATE NOT NULL,
    PATH VARCHAR(1000) CONSTRAINT INFO_ATT_PATH NOT NULL
);

COMMENT ON COLUMN INFO_ATTACHMENT.ATT_NO IS '파일번호';
COMMENT ON COLUMN INFO_ATTACHMENT.ORIGIN_NAME IS '파일원본명';
COMMENT ON COLUMN INFO_ATTACHMENT.CHANGE_NAME IS '파일수정명';
COMMENT ON COLUMN INFO_ATTACHMENT.UPLOAD_DATE IS '업로드일';
COMMENT ON COLUMN INFO_ATTACHMENT.PATH IS '파일경로';

-------------------------------------------------------------------------------
DROP TABLE AL_INFORMATION;
CREATE TABLE AL_INFORMATION (
    INFO_NO NUMBER CONSTRAINT AL_INFO_PK PRIMARY KEY,
    CONTENT VARCHAR(100),
    ATT_NO NUMBER,
    AL_NO NUMBER,
    CONSTRAINT AL_INFO_ATT_FK FOREIGN KEY(ATT_NO) REFERENCES INFO_ATTACHMENT(ATT_NO),
    CONSTRAINT AL_INFO_AL_FK FOREIGN KEY(AL_NO) REFERENCES ASSET_LIST(AL_NO)
);

COMMENT ON COLUMN AL_INFORMATION.INFO_NO IS '이용안내번호';
COMMENT ON COLUMN AL_INFORMATION.CONTENT IS '내용';
COMMENT ON COLUMN AL_INFORMATION.ATT_NO IS '파일번호';
COMMENT ON COLUMN AL_INFORMATION.AL_NO IS '목록번호';

-------------------------------------------------------------------------------
DROP TABLE ASSET;
CREATE TABLE ASSET (
    AS_NO NUMBER CONSTRAINT AS_PK PRIMARY KEY,
    NAME VARCHAR(20) CONSTRAINT AS_NAME_NN NOT NULL,
    CONTENT VARCHAR(200) CONSTRAINT AS_CONTENT_NN NOT NULL,
    AL_NO NUMBER,
    CONSTRAINT AS_AL_FK FOREIGN KEY(AL_NO) REFERENCES ASSET_LIST(AL_NO)
);

COMMENT ON COLUMN ASSET.AS_NO IS '자산번호';
COMMENT ON COLUMN ASSET.NAME IS '자산명';
COMMENT ON COLUMN ASSET.CONTENT IS '자산정보';
COMMENT ON COLUMN ASSET.AL_NO IS '목록번호';

-------------------------------------------------------------------------------
DROP TABLE RESERVATION;
CREATE TABLE RESERVATION (
    REZ_NO NUMBER CONSTRAINT REZ_PK PRIMARY KEY,
    START_DATE DATE CONSTRAINT REZ_START_DATE_NN NOT NULL,
    END_DATE DATE CONSTRAINT REZ_END_DATE_NN NOT NULL,
    AS_NO NUMBER,
    EMP_NO NUMBER,
    CONSTRAINT REZ_AS_FK FOREIGN KEY(AS_NO) REFERENCES ASSET(AS_NO) ON DELETE CASCADE,
    CONSTRAINT REZ_EMP_FK FOREIGN KEY(EMP_NO) REFERENCES EMPLOYEE(EMP_NO) ON DELETE CASCADE   
);

COMMENT ON COLUMN RESERVATION.REZ_NO IS '예약번호';
COMMENT ON COLUMN RESERVATION.START_DATE IS '시작일';
COMMENT ON COLUMN RESERVATION.END_DATE IS '종료일';
COMMENT ON COLUMN RESERVATION.AS_NO IS '자산번호';
COMMENT ON COLUMN RESERVATION.EMP_NO IS '사원번호';
-------------------------------------------------------------------------------
DROP TABLE REZ_USAGE_INFO;
CREATE TABLE REZ_USAGE_INFO (
    REZ_INFO_NO NUMBER CONSTRAINT REZ_USAGE_INFO_PF PRIMARY KEY,
    CONTENT VARCHAR(30),
    INFO_NO NUMBER,
    REZ_NO NUMBER,
    CONSTRAINT REZ_USG_INFO_FK FOREIGN KEY(INFO_NO) REFERENCES AL_USAGE_INFO(INFO_NO),
    CONSTRAINT REZ_USG_REZ_FK FOREIGN KEY(REZ_NO) REFERENCES RESERVATION(REZ_NO)
);

COMMENT ON COLUMN REZ_USAGE_INFO.REZ_INFO_NO IS '이용번호';
COMMENT ON COLUMN REZ_USAGE_INFO.CONTENT IS '내용';
COMMENT ON COLUMN REZ_USAGE_INFO.INFO_NO IS '이용정보번호';
COMMENT ON COLUMN REZ_USAGE_INFO.REZ_NO IS '예약번호';

-----------------------------------------------------------------------------------------------------------------------------------------------------------
-- DML ----------------------------------------------------------------------------------------------------------------------------------------------------
-- 일정 ----------------------------------------------------------------------------------------------------------------------------------------------------

-- 예약 ----------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------


